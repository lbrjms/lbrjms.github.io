<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青萍水袖</title>
  
  <subtitle>做一些简单的事情 把有用的东西写下来 总有一天你能用的到</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lbrjms.github.io/"/>
  <updated>2019-07-19T10:22:46.806Z</updated>
  <id>http://lbrjms.github.io/</id>
  
  <author>
    <name>WJ</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS更换项目名</title>
    <link href="http://lbrjms.github.io/2019/07/19/iOS%E6%9B%B4%E6%8D%A2%E9%A1%B9%E7%9B%AE%E5%90%8D/"/>
    <id>http://lbrjms.github.io/2019/07/19/iOS更换项目名/</id>
    <published>2019-07-19T09:42:14.000Z</published>
    <updated>2019-07-19T10:22:46.806Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"># encoding: UTF-8</span><br><span class="line">#!/usr/bin/ruby</span><br><span class="line">require &apos;fileutils&apos;</span><br><span class="line">require &apos;active_support/all&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">OLD_PREFIX = &quot;SetNickNameVC&quot;</span><br><span class="line">NEW_PREFIX = &quot;LHGJResetPswVC&quot;</span><br><span class="line"></span><br><span class="line">FOLDER_EXCLUDE = [&quot;Pods&quot;, &quot;.framework&quot;]</span><br><span class="line">CONTENT_EXCLUDE = [&quot;.xcuserstate&quot;, &quot;.a&quot;, &quot;.mp3&quot;, &quot;.avi&quot;, &quot;.mp4&quot;, &quot;.wmv&quot;, &quot;.webp&quot;, &quot;.png&quot;, &quot;.jpg&quot;, &quot;.rb&quot;]</span><br><span class="line"></span><br><span class="line"># REGEXP = &quot;([^a-zA-Z_0-9]|^)#&#123;OLD_PREFIX&#125;([A-Z].*?)&quot;</span><br><span class="line">REGEXP = &quot;#&#123;OLD_PREFIX&#125;(.*?)&quot;</span><br><span class="line">NEW_STRING = &apos;\1&apos;+NEW_PREFIX+&apos;\2&apos;</span><br><span class="line"></span><br><span class="line">def search(dir)</span><br><span class="line">    Dir[File.join(dir, &apos;*&apos;)].each do |file|</span><br><span class="line">        unless FOLDER_EXCLUDE.include?(File.extname(file).empty? ? File.basename(file) : File.extname(file))</span><br><span class="line">            # 非排除的文件夹，才进入搜索</span><br><span class="line">            if File.directory?(file)</span><br><span class="line">                search(file)</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        if File.file?(file)</span><br><span class="line">            search_content(file)</span><br><span class="line">        end</span><br><span class="line">        filename = File.basename(file)</span><br><span class="line">        new_filename = filename.gsub(Regexp.new(REGEXP), NEW_STRING)</span><br><span class="line">        if filename != new_filename</span><br><span class="line">            dirname = File.dirname(file)</span><br><span class="line">            new_file = File.join(dirname, new_filename)</span><br><span class="line">            puts &quot;重命名文件: #&#123;file&#125; -&gt; #&#123;new_file&#125;&quot;</span><br><span class="line">            File.rename(file, new_file)</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">def search_content(file)</span><br><span class="line">    # 不对排查的文件进行内容替换</span><br><span class="line">    return if CONTENT_EXCLUDE.include?(File.extname(file))</span><br><span class="line">    encoding = `file -I &quot;#&#123;file&#125;&quot;`.strip.split(&apos;charset=&apos;).last</span><br><span class="line">    encoding = &quot;utf-8&quot; if encoding.empty?</span><br><span class="line">    puts &quot;分析: #&#123;file&#125; (#&#123;encoding&#125;)&quot;</span><br><span class="line">    content = File.open(file, &quot;rb:#&#123;encoding&#125;&quot;, &amp;:read)</span><br><span class="line">    reg = Regexp.new(REGEXP.encode(encoding))</span><br><span class="line">    new_content = content.gsub(reg, NEW_STRING.encode(encoding))</span><br><span class="line">    if content != new_content</span><br><span class="line">        File.open(file, &quot;w:UTF-8&quot;) do |f|</span><br><span class="line">            f.write(new_content)</span><br><span class="line">        end</span><br><span class="line">        puts &quot;更新文件内容: #&#123;file&#125;&quot;</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">search(Dir.pwd)</span><br></pre></td></tr></table></figure><p><em>将以上脚本copy到rename.rb文件放在项目目录下 OLD_PREFIX、 NEW_PREFIX 分别填写你想要改的名字 执行 ruby rename.rb 即可 如果项目集成了cocoapod这时候会报错 只需要重新pod install即可</em></p>]]></content>
    
    <summary type="html">
    
      iOS开发经常会复制另一个项目进行开发更改 这时候要做的第一件事就是更改项目名，下面有一段更改项目名以及文件名的脚本
    
    </summary>
    
    
      <category term="shell" scheme="http://lbrjms.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Run Script</title>
    <link href="http://lbrjms.github.io/2019/07/19/Run-Script/"/>
    <id>http://lbrjms.github.io/2019/07/19/Run-Script/</id>
    <published>2019-07-19T05:26:33.000Z</published>
    <updated>2019-07-19T09:41:43.243Z</updated>
    
    <content type="html"><![CDATA[<h3 id="譬如启动页动态加载版本号"><a href="#譬如启动页动态加载版本号" class="headerlink" title="譬如启动页动态加载版本号"></a>譬如启动页动态加载版本号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 获取当前版本号</span><br><span class="line"># PlistBuddy plist操作工具 可用来对plist文件增删改查</span><br><span class="line">versionNumber=$(/usr/libexec/PlistBuddy -c &quot;Print :CFBundleShortVersionString&quot; &quot;$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;&quot;)</span><br><span class="line"># sed是一个非交互性文本流编辑器，可以与vi一样对文本进行编辑，但其可以在命令行或shell脚本中执行，从而避免了繁重的人机交互式的文件编辑操作</span><br><span class="line">sed -i bak -e &quot;/userLabel=\&quot;AppVersion\&quot;/s/text=\&quot;[^\&quot;]*\&quot;/text=\&quot;版本号：$versionNumber\&quot;/&quot; $PROJECT_DIR/LHGJiOS/Base.lproj/LaunchScreen.storyboard</span><br></pre></td></tr></table></figure><h3 id="常用的脚本"><a href="#常用的脚本" class="headerlink" title="常用的脚本"></a>常用的脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">每次构建的时候build号自增</span><br><span class="line">if [ $CONFIGURATION == Release ]; then</span><br><span class="line">    echo &quot;Bumping build number...&quot;</span><br><span class="line">    plist=$&#123;PROJECT_DIR&#125;/$&#123;INFOPLIST_FILE&#125;</span><br><span class="line"></span><br><span class="line">    #increment the build number (ie 115 to 116)</span><br><span class="line">    buildnum=$(/usr/libexec/PlistBuddy -c &quot;Print CFBundleVersion&quot; &quot;$&#123;plist&#125;&quot;)</span><br><span class="line"></span><br><span class="line">    if [[ &quot;$&#123;buildnum&#125;&quot; == &quot;&quot; ]]; then</span><br><span class="line">        echo &quot;No build number in $plist&quot;</span><br><span class="line">        exit 2</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    buildnum=$(expr $buildnum + 1)</span><br><span class="line"></span><br><span class="line">    /usr/libexec/Plistbuddy -c &quot;Set CFBundleVersion $buildnum&quot; &quot;$&#123;plist&#125;&quot;</span><br><span class="line"></span><br><span class="line">    echo &quot;Bumped build number to $buildnum&quot;</span><br><span class="line"></span><br><span class="line">    echo &quot;开始自增 Version 最后一位&quot;</span><br><span class="line">    versionNum=$(/usr/libexec/PlistBuddy -c &quot;Print CFBundleShortVersionString&quot; &quot;$&#123;plist&#125;&quot;)</span><br><span class="line">    # 取出第三个值</span><br><span class="line">    thirdPartVersonNum=`echo $versionNum | awk -F &quot;.&quot; &apos;&#123;print $3&#125;&apos;`</span><br><span class="line">    thirdPartVersonNum=$(($thirdPartVersonNum + 1))</span><br><span class="line">    newVersionStr=`echo $versionNum | awk -F &quot;.&quot; &apos;&#123;print $1 &quot;.&quot; $2 &quot;.&apos;$thirdPartVersonNum&apos;&quot; &#125;&apos;`</span><br><span class="line">    /usr/libexec/PlistBuddy -c &quot;Set CFBundleShortVersionString $newVersionStr&quot; &quot;$&#123;plist&#125;&quot;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">    echo $CONFIGURATION &quot; build - Not bumping build number.&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">根据bundleID不同，设置不同的jpush appkey等</span><br><span class="line">#!/bin/bash</span><br><span class="line">bundleID=$&#123;PRODUCT_BUNDLE_IDENTIFIER&#125;</span><br><span class="line">id=&quot;com.zhoumoquan.zhoumoquan&quot;</span><br><span class="line">if [&quot;$bundleID&quot;=&quot;$id&quot;]; then</span><br><span class="line">cp zmq/PushConfig_AppStore.plist zmq/PushConfig.plist</span><br><span class="line">else</span><br><span class="line">cp zmq/PushConfig_Enterprise.plist zmq/PushConfig.plist</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">打包上传时移除第三方库中无用的部分</span><br><span class="line">APP_PATH=&quot;$&#123;TARGET_BUILD_DIR&#125;/$&#123;WRAPPER_NAME&#125;&quot;</span><br><span class="line"></span><br><span class="line"># This script loops through the frameworks embedded in the application and</span><br><span class="line"># removes unused architectures.</span><br><span class="line">find &quot;$APP_PATH&quot; -name &apos;*.framework&apos; -type d | while read -r FRAMEWORK</span><br><span class="line">do</span><br><span class="line">FRAMEWORK_EXECUTABLE_NAME=$(defaults read &quot;$FRAMEWORK/Info.plist&quot; CFBundleExecutable)</span><br><span class="line">FRAMEWORK_EXECUTABLE_PATH=&quot;$FRAMEWORK/$FRAMEWORK_EXECUTABLE_NAME&quot;</span><br><span class="line">echo &quot;Executable is $FRAMEWORK_EXECUTABLE_PATH&quot;</span><br><span class="line"></span><br><span class="line">EXTRACTED_ARCHS=()</span><br><span class="line"></span><br><span class="line">for ARCH in $ARCHS</span><br><span class="line">do</span><br><span class="line">echo &quot;Extracting $ARCH from $FRAMEWORK_EXECUTABLE_NAME&quot;</span><br><span class="line">lipo -extract &quot;$ARCH&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot; -o &quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;</span><br><span class="line">EXTRACTED_ARCHS+=(&quot;$FRAMEWORK_EXECUTABLE_PATH-$ARCH&quot;)</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;Merging extracted architectures: $&#123;ARCHS&#125;&quot;</span><br><span class="line">lipo -o &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; -create &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</span><br><span class="line">rm &quot;$&#123;EXTRACTED_ARCHS[@]&#125;&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;Replacing original executable with thinned version&quot;</span><br><span class="line">rm &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</span><br><span class="line">mv &quot;$FRAMEWORK_EXECUTABLE_PATH-merged&quot; &quot;$FRAMEWORK_EXECUTABLE_PATH&quot;</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>Xcode Run Script Phase，有很多环境变量。</p><p>可以添加一个 Run Script,添加一条命令：env 编译之后就可以再编译报告里看到输出的环境变量</p>]]></content>
    
    <summary type="html">
    
      ios项目中可以添加Run Script动态加载你想要的
    
    </summary>
    
    
      <category term="shell" scheme="http://lbrjms.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>iOS崩溃日志符号化</title>
    <link href="http://lbrjms.github.io/2019/07/19/iOS%E5%B4%A9%E6%BA%83%E6%97%A5%E5%BF%97%E7%AC%A6%E5%8F%B7%E5%8C%96/"/>
    <id>http://lbrjms.github.io/2019/07/19/iOS崩溃日志符号化/</id>
    <published>2019-07-19T04:48:57.000Z</published>
    <updated>2019-07-19T09:41:35.396Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="shell" scheme="http://lbrjms.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>iOS与JS交互之WKWebView</title>
    <link href="http://lbrjms.github.io/2019/07/18/iOS%E4%B8%8EJS%E4%BA%A4%E4%BA%92%E4%B9%8BWKWebView/"/>
    <id>http://lbrjms.github.io/2019/07/18/iOS与JS交互之WKWebView/</id>
    <published>2019-07-18T09:53:41.000Z</published>
    <updated>2019-07-19T04:45:27.557Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS调js"><a href="#iOS调js" class="headerlink" title="iOS调js"></a>iOS调js</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">两端提前协议号方法参数</span><br><span class="line">[self.webView evaluateJavaScript:@&quot;ocToJs(&apos;loginSucceed&apos;, &apos;oc_tokenString&apos;)&quot; completionHandler:^(id response, NSError *error) &#123;&#125;];</span><br></pre></td></tr></table></figure><h3 id="js调oc"><a href="#js调oc" class="headerlink" title="js调oc"></a>js调oc</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">WKScriptMessageHandler oc端实现此协议下的方法：</span><br><span class="line"></span><br><span class="line">- (void)userContentController:(WKUserContentController *)userContentController didReceiveScriptMessage:(WKScriptMessage *)message;</span><br><span class="line"></span><br><span class="line">、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、、</span><br><span class="line">@interface WKScriptMessage : NSObject</span><br><span class="line"></span><br><span class="line">/*! @abstract The body of the message.</span><br><span class="line"> @discussion Allowed types are NSNumber, NSString, NSDate, NSArray,</span><br><span class="line"> NSDictionary, and NSNull.</span><br><span class="line"> */</span><br><span class="line">@property (nonatomic, readonly, copy) id body;</span><br><span class="line"></span><br><span class="line">/*! @abstract The web view sending the message. */</span><br><span class="line">@property (nullable, nonatomic, readonly, weak) WKWebView *webView;</span><br><span class="line"></span><br><span class="line">/*! @abstract The frame sending the message. */</span><br><span class="line">@property (nonatomic, readonly, copy) WKFrameInfo *frameInfo;</span><br><span class="line"></span><br><span class="line">/*! @abstract The name of the message handler to which the message is sent.</span><br><span class="line"> */</span><br><span class="line">@property (nonatomic, readonly, copy) NSString *name;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><p>name判断是否是提前定义好的方法 body里面是想要的参数</p><p>我会对body做进一步的处理 这主要看自己和后台的定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NSData * data = [body dataUsingEncoding:NSUTF8StringEncoding];  </span><br><span class="line">NSError * err;</span><br><span class="line">id jsonData = (NSDictionary *)[NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:&amp;err];</span><br><span class="line">if (err) &#123;</span><br><span class="line">    jsonData = body;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="加载网页过程的高度进度等控制"><a href="#加载网页过程的高度进度等控制" class="headerlink" title="加载网页过程的高度进度等控制"></a>加载网页过程的高度进度等控制</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary&lt;NSKeyValueChangeKey,id&gt; *)change context:(void *)context &#123;</span><br><span class="line"></span><br><span class="line">    if ([keyPath isEqualToString:@&quot;estimatedProgress&quot;]) &#123;</span><br><span class="line">        CGFloat newprogress = [[change objectForKey:NSKeyValueChangeNewKey] doubleValue];</span><br><span class="line">        !self.getWebEswebEtimatedProgress?:self.getWebEswebEtimatedProgress(newprogress);</span><br><span class="line">    &#125;else if ([keyPath isEqualToString:@&quot;title&quot;]) &#123;</span><br><span class="line">        NSString * webTitle = [change objectForKey:NSKeyValueChangeNewKey];</span><br><span class="line">        !self.getWebTitle?:self.getWebTitle(webTitle);</span><br><span class="line">    &#125;else if ([keyPath isEqualToString:NSStringFromSelector(@selector(contentSize))]) &#123;</span><br><span class="line">        //sizeThatFits: 返回一个合适的大小以布局，默认实现是返回当前视图的已知大小</span><br><span class="line">        CGSize webViewSize = self.wkWebView.scrollView.contentSize;</span><br><span class="line">        if (_observeScrollHeight) &#123;</span><br><span class="line">            _observeScrollHeight(webViewSize.height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="网页加载成功后的高度回调"><a href="#网页加载成功后的高度回调" class="headerlink" title="网页加载成功后的高度回调"></a>网页加载成功后的高度回调</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">///网页加载成功</span><br><span class="line">- (void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation&#123;</span><br><span class="line">    !self.didFinishNavigation?:self.didFinishNavigation();</span><br><span class="line">    /* 获取webView的高度 @&quot;document.body.scrollHeight&quot; @&quot;document.body.offsetHeight&quot; @&quot;document.body.clientHeight&quot;*/</span><br><span class="line">    __weak typeof(self) weakSelf = self;</span><br><span class="line">    [webView evaluateJavaScript:@&quot;document.body.scrollHeight&quot; completionHandler:^(id h, NSError * _Nullable error) &#123;</span><br><span class="line">        __strong typeof(self) strongSelf = weakSelf;</span><br><span class="line">        if (!error) &#123;</span><br><span class="line">            !strongSelf.getWebDocumentBodyScrollHeight?:strongSelf.getWebDocumentBodyScrollHeight([h floatValue]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考 <a href="https://mp.weixin.qq.com/s/rhYKLIbXOsUJC_n6dt9UfA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rhYKLIbXOsUJC_n6dt9UfA</a>?</p>]]></content>
    
    <summary type="html">
    
      为了方便快捷的开发app，开发过程中经常有WKWebView 实现iOS与js的交互
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS 重签名</title>
    <link href="http://lbrjms.github.io/2019/07/05/iOS-%E9%87%8D%E7%AD%BE%E5%90%8D/"/>
    <id>http://lbrjms.github.io/2019/07/05/iOS-重签名/</id>
    <published>2019-07-05T02:07:28.000Z</published>
    <updated>2019-07-15T03:14:32.722Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xcode-Profiles地址"><a href="#xcode-Profiles地址" class="headerlink" title="xcode Profiles地址"></a>xcode Profiles地址</h3><p> ~/Library/MobileDevice/Provisioning Profiles</p><h3 id="签名的基本流程"><a href="#签名的基本流程" class="headerlink" title="签名的基本流程"></a>签名的基本流程</h3><p>1、在Mac上生成一对公私钥，这里称公钥M，私钥M。</p><p>2、苹果自己有固定的一对公私钥，跟上面AppStore例子一样，私钥在苹果后台，公钥内置在每个iOS设备上，这里称为公钥A，私钥A。</p><p>3、把公钥M上传到苹果后台，用苹果后台里的私钥A去签名公钥M。得到一份数据包含了公钥M以及其签名（也就是公钥的HASH值），把这份数据称为证书。</p><p>4、在开发时，编译完一个App后，用本地的私钥M对这个App进行签名，同时把第三步得到的证书一起打包进App里，安装到手机。</p><p>5、在安装时，iOS系统取得证书，通过系统内置的公钥A，去验证证书的数字签名是否正确。</p><p>验证证书确保公钥M是苹果认证过的，再用公钥M去验证App的签名，这里就间接验证了这个App的安装行为是否经过苹果官方允许。（这里只验证安装行为，不验证App是否被改动，因为开发阶段App内容总是不断变化的，苹果不需要管）。</p><p><a href="https://www.jianshu.com/p/fc56a70ee4fb" target="_blank" rel="noopener">https://www.jianshu.com/p/fc56a70ee4fb</a></p><h3 id="plis文件的生成"><a href="#plis文件的生成" class="headerlink" title="plis文件的生成"></a>plis文件的生成</h3><ul><li><p>根据mobileprovision生成相关的plist<br><code>security cms -D -i 123.mobileprovision &gt; embedded.plist</code></p></li><li><p>根据plist 截取其中的Entitlements部分<br><code>/usr/libexec/PlistBuddy -x -c &#39;Print:Entitlements&#39;  embedded.plist &gt; entitlements.plist</code></p></li></ul><h3 id="签名脚本"><a href="#签名脚本" class="headerlink" title="签名脚本"></a>签名脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line">if ! ([ -f &quot;$1&quot; ]); then</span><br><span class="line">echo ----- \&quot;$&#123;1&#125;\&quot;文件不存在</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">ipaName=$&#123;1%.ipa&#125;</span><br><span class="line">if [ &quot;$ipaName&quot; = &quot;$1&quot; ]; then</span><br><span class="line">echo ----- \&quot;$&#123;1&#125;\&quot;error 不是ipa文件</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">## step 1 解压ipa</span><br><span class="line">unzip $&#123;ipaName&#125;.ipa</span><br><span class="line"></span><br><span class="line">## step 2 删除旧签名文件</span><br><span class="line">rm -rf Payload/*.app/_CodeSignature/</span><br><span class="line"></span><br><span class="line">## step 3 拷贝证书配置和权限文件</span><br><span class="line">cp embedded.mobileprovision Payload/*.app/embedded.mobileprovision</span><br><span class="line">cp entitlements.plist Payload/*.app/</span><br><span class="line"></span><br><span class="line">## step 4 重签名</span><br><span class="line">(</span><br><span class="line">/usr/bin/codesign -f -s &quot;Iris Info-Tech(Shanghai) Co.,Ltd&quot; --entitlements Payload/*.app/entitlements.plist Payload/*.app/</span><br><span class="line">) || &#123;</span><br><span class="line">rm -rf Payload/</span><br><span class="line">rm -rf __MACOSX/</span><br><span class="line">exit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## step 5 打包</span><br><span class="line">zip -r $&#123;ipaName&#125;_resign.ipa Payload/</span><br><span class="line">rm -rf Payload/</span><br><span class="line">rm -rf __MACOSX/</span><br></pre></td></tr></table></figure><h3 id="签名工具"><a href="#签名工具" class="headerlink" title="签名工具"></a>签名工具</h3><p>iReSign</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;xcode-Profiles地址&quot;&gt;&lt;a href=&quot;#xcode-Profiles地址&quot; class=&quot;headerlink&quot; title=&quot;xcode Profiles地址&quot;&gt;&lt;/a&gt;xcode Profiles地址&lt;/h3&gt;&lt;p&gt; ~/Library/Mob
      
    
    </summary>
    
    
      <category term="重签名" scheme="http://lbrjms.github.io/tags/%E9%87%8D%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title>Cocoapods制作自己的Pod库</title>
    <link href="http://lbrjms.github.io/2019/06/12/Cocoapods%E5%88%B6%E4%BD%9C%E8%87%AA%E5%B7%B1%E7%9A%84Pod%E5%BA%93/"/>
    <id>http://lbrjms.github.io/2019/06/12/Cocoapods制作自己的Pod库/</id>
    <published>2019-06-12T07:53:56.000Z</published>
    <updated>2019-06-12T08:53:11.645Z</updated>
    
    <content type="html"><![CDATA[<h3 id="整体流程"><a href="#整体流程" class="headerlink" title="整体流程"></a>整体流程</h3><ul><li><p>GitHub上创建仓库 test</p></li><li><p>克隆仓库到本地</p></li><li><p>在仓库下面建项目（即你要开放的代码）</p></li><li><p>创建.podspec文件</p><p><code>pod spec create test</code></p></li><li><p>编辑.podspec文件</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Pod::Spec.new do |s|</span><br><span class="line"></span><br><span class="line">  s.name         = &quot;WJDetailHeaderView&quot;</span><br><span class="line">  s.version      = &quot;1.0.1&quot;</span><br><span class="line">  s.summary      = &quot;标详情页的头部&quot;</span><br><span class="line">  # 这个必须得写否则会报错 并且要比summary长</span><br><span class="line">  s.description  = &lt;&lt;-DESC</span><br><span class="line">  这是新建的标信息仓库</span><br><span class="line">                   DESC</span><br><span class="line">  s.homepage     = &quot;https://github.com/lbrjms/WJDetailHeaderView&quot;</span><br><span class="line">  s.license      = &#123; :type =&gt; &quot;MIT&quot;, :file =&gt; &quot;FILE_LICENSE&quot; &#125;</span><br><span class="line">  s.author             = &#123; &quot;lwj_code&quot; =&gt; &quot;wallien@163.com&quot; &#125;</span><br><span class="line">  s.platform     = :ios, &quot;8.0&quot;</span><br><span class="line">  s.source       = &#123; :git =&gt; &quot;https://github.com/lbrjms/WJDetailHeaderView.git&quot;, :tag =&gt; s.version &#125;</span><br><span class="line">  s.source_files  = &quot;Classes&quot;, &quot;WJDetailHeaderView/WJDetailHeaderView/DetailHeaderView.swift&quot;</span><br><span class="line">  # 指定swift的版本 否则有警告</span><br><span class="line">  s.swift_version = &apos;3.2&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><ul><li>项目打源码tag并上传git</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git status</span><br><span class="line">git commit -m &quot;this is 1.0.0&quot;</span><br><span class="line">git tag &apos;1.0.0&apos;</span><br><span class="line">git push --tags</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><ul><li>验证podspec</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod spec lint</span><br></pre></td></tr></table></figure><ul><li>注册pod</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pod trunk register wallien@163.com &quot;lwj_code&quot;</span><br><span class="line"></span><br><span class="line">注册之后记得邮箱认证</span><br></pre></td></tr></table></figure><ul><li>发布pod</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod trunk push test.podspec</span><br></pre></td></tr></table></figure><p>到这里没问题就是成功了</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>xcrun: error: unable to find utility “simctl”, not a developer tool or in PATH ) during validation</p><p>到xcode的偏好设置里面设置command line tools： Xcode&gt;preferences&gt;Locations里面，设置之后再运行终端即可</p>]]></content>
    
    <summary type="html">
    
      做iOS开发 很多都会用cocoapods管理第三方开源库 有时候会会想自己也写一个 另外组件化开发更需我们制作自己的开源库
    
    </summary>
    
    
      <category term="Pod" scheme="http://lbrjms.github.io/tags/Pod/"/>
    
  </entry>
  
  <entry>
    <title>RSS订阅打开都是xml的问题</title>
    <link href="http://lbrjms.github.io/2019/06/06/RSS%E8%AE%A2%E9%98%85%E6%89%93%E5%BC%80%E9%83%BD%E6%98%AFxml%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://lbrjms.github.io/2019/06/06/RSS订阅打开都是xml的问题/</id>
    <published>2019-06-06T07:20:22.000Z</published>
    <updated>2019-06-12T07:59:46.283Z</updated>
    
    <content type="html"><![CDATA[<p>安装rss插件</p><p><code>npm install hexo-generator-feed</code></p><p>在这个各种信息混杂的时代，rss真的感觉是一股清流，我们可以通过这个功能订阅自己先看的文章，节目….</p><p>刚接触rss遇到最多的问题就是点击网站的rss订阅 显示的都是xml代码，这是由于没有安装RSS客户端 或是没有支持RSS的插件</p><p>如果是google浏览器可以安装feeder插件挺好用</p><p><a href="https://juejin.im/post/5c382a326fb9a049f15469eb" target="_blank" rel="noopener">https://juejin.im/post/5c382a326fb9a049f15469eb</a></p><p><a href="https://www.inoreader.com/" target="_blank" rel="noopener">https://www.inoreader.com/</a></p>]]></content>
    
    <summary type="html">
    
      看到好多网站都有RSS订阅的东西，最早不知道什么作用，后来发现确实很好 这里记录一下自己看到的关于rss的文章
    
    </summary>
    
    
      <category term="Hexo" scheme="http://lbrjms.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>MD常用语法</title>
    <link href="http://lbrjms.github.io/2019/06/05/md%E8%AF%AD%E6%B3%95/"/>
    <id>http://lbrjms.github.io/2019/06/05/md语法/</id>
    <published>2019-06-05T08:26:20.000Z</published>
    <updated>2019-06-12T08:01:22.539Z</updated>
    
    <content type="html"><![CDATA[<h1 id="md简单语法"><a href="#md简单语法" class="headerlink" title="md简单语法"></a>md简单语法</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h1><p>//形式一</p><ul><li>a</li><li>b</li><li>c</li></ul><p>//形式二</p><ul><li>d</li><li>e</li><li>f</li></ul><p>//形式三</p><ul><li>g</li><li>h</li><li>i</li></ul><h1 id="无序列表嵌套"><a href="#无序列表嵌套" class="headerlink" title="无序列表嵌套"></a>无序列表嵌套</h1><ul><li>123<ul><li>abc</li><li>bcd</li><li>cde</li></ul></li><li>465</li><li>789</li></ul><h1 id="有序列表嵌套"><a href="#有序列表嵌套" class="headerlink" title="有序列表嵌套"></a>有序列表嵌套</h1><ol><li>abcd<ol><li>abcde</li><li>abcde</li><li>abcde</li></ol></li><li>bcde</li><li>cdef</li></ol><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p>引用内容、说明内容。在语句前面加一个 &gt; ，注意是英文的那个右尖括号，注意空格，引用因为是一个区块，理论上是应该什么内容都可以放，比如说：标题，列表，引用等等。</p></blockquote><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><p>四级引用</p><blockquote><p>五级引用</p><blockquote><p>六级引用</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p><code>NSOpenPanel* openDlg = [NSOpenPanel openPanel]</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NSOpenPanel* openDlg = [NSOpenPanel openPanel];</span><br><span class="line"></span><br><span class="line">[openDlg setCanChooseFiles:TRUE];</span><br><span class="line">[openDlg setCanChooseDirectories:FALSE];</span><br><span class="line">[openDlg setAllowsMultipleSelection:FALSE];</span><br><span class="line">[openDlg setAllowsOtherFileTypes:FALSE];</span><br><span class="line">[openDlg setAllowedFileTypes:@[@&quot;ipa&quot;, @&quot;IPA&quot;, @&quot;xcarchive&quot;]];</span><br><span class="line"></span><br><span class="line">if ([openDlg runModal] == NSOKButton)</span><br><span class="line">&#123;</span><br><span class="line">    NSString* fileNameOpened = [[[openDlg URLs] objectAtIndex:0] path];</span><br><span class="line">    [pathField setStringValue:fileNameOpened];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul><li>行内式<br>链接的文字放在[]中，链接地址放在随后的()中，链接也可以带title属性，链接地址后面空一格，然后用引号引起来</li></ul><p><a href="https://www.jianshu.com" title="创作你的创作" target="_blank" rel="noopener">简书</a>,是一个创作社区,任何人均可以在其上进行创作。用户在简书上面可以方便的创作自己的作品,互相交流</p><ul><li>参数式<br>链接的文字放在[]中，链接地址放在随后的:后，链接地址后面空一格，然后用引号引起来</li></ul><p><a href="https://www.jianshu.com" title="创作你的创作" target="_blank" rel="noopener">简书</a>是一个创作社区,任何人均可以在其上进行创作。用户在简书上面可以方便的创作自己的作品,互相交流。</p><p>//参数定义的其他写法</p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><h3 id="至少三个字符"><a href="#至少三个字符" class="headerlink" title="至少三个字符"></a>至少三个字符</h3><hr><hr><hr><hr><hr><hr><hr><hr><hr><h1 id="斜体-加粗-删除线"><a href="#斜体-加粗-删除线" class="headerlink" title="斜体 加粗 删除线"></a>斜体 加粗 删除线</h1><p><em>md</em><br><strong>md</strong></p><p><em>md</em><br><strong>md</strong></p><p><del>删除</del></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><p>//例子一</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table><p>//例子二</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table><p>//例子三</p><table><thead><tr><th align="left">123</th><th align="center">234</th><th align="right">345</th></tr></thead><tbody><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr><tr><td align="left">abc</td><td align="center">bcd</td><td align="right">cde</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      记录常用的md命令
    
    </summary>
    
      <category term="文章" scheme="http://lbrjms.github.io/categories/%E6%96%87%E7%AB%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo + GitHubPages搭建个人博客</title>
    <link href="http://lbrjms.github.io/2019/06/05/GitHub-Pages-Hexo%E5%86%99%E5%8D%9A%E5%AE%A2/"/>
    <id>http://lbrjms.github.io/2019/06/05/GitHub-Pages-Hexo写博客/</id>
    <published>2019-06-05T07:11:20.000Z</published>
    <updated>2019-06-12T08:00:46.641Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建github仓库"><a href="#创建github仓库" class="headerlink" title="创建github仓库"></a>创建github仓库</h3><ul><li>创建一个github仓库 仓库名必须与用户名相同 之后的博客地址就是：<a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a></li></ul><h3 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h3><p><em>Git可以通过https和ssh两种方式连接服务器上的仓库。ssh的方式会在传输前压缩数据，<br>这样传输的效率很高。而且不需要每次都输入账号和密码。</em></p><ul><li>git的用户名和邮箱设置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;your name”</span><br><span class="line">$ git config --global user.email &quot;your email&quot;</span><br></pre></td></tr></table></figure><ul><li>查看本地是否有ssh密钥（有这些文件说明已经有了id_rsa，id_rsa.pubknown_hosts），<br>如果没有就自己生成</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">生成ssh命令 根据提示一步步操作即可</span><br><span class="line">ssh-keygen -t rsa -C “your email”</span><br></pre></td></tr></table></figure><ul><li>vim打开公钥文件 复制共钥到github的设置里面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim id_rsa.pub</span><br></pre></td></tr></table></figure><h3 id="安装Hexo环境"><a href="#安装Hexo环境" class="headerlink" title="安装Hexo环境"></a>安装Hexo环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 安装hexo</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">// 初始化一个blog文件夹</span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line">// 到blog文件夹下启动服务 之后就可以在http://localhost:4000 看的你的博客</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><ul><li>修改blog文件夹下的_config.yml文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">### :号后面都要有空格 否则hexo d的时候会没反应</span><br><span class="line">deploy:</span><br><span class="line">type:git</span><br><span class="line">repo:git@github.com:你的github账号/你的github账号.github.io.git</span><br><span class="line">branch:master</span><br></pre></td></tr></table></figure><ul><li>生成新的public文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   //删除旧的public文件</span><br><span class="line">hexo generate / hexo g   //生成新的public文件</span><br></pre></td></tr></table></figure><h3 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploye / hexo d</span><br></pre></td></tr></table></figure><p><em>到此就初步完成了 在打开<a href="https://lbrjms.github.io就可以看到你的博客了" target="_blank" rel="noopener">https://lbrjms.github.io就可以看到你的博客了</a></em></p><h3 id="更换主题A"><a href="#更换主题A" class="headerlink" title="更换主题Â"></a>更换主题Â</h3><p><em>成功之后的第一件事就是更换主题 选择自己喜欢的主题 下载到themes文件夹下面<br>更改_config.yml 的themes 对应的名字就可以了</em></p><ul><li>下面是我clone的主题</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant</span><br><span class="line">$ npm install hexo-renderer-pug --save</span><br><span class="line">$ npm install hexo-renderer-sass --save</span><br></pre></td></tr></table></figure><ul><li>开启分类 tags</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$</span><br><span class="line">$ hexo new page tags</span><br><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><h3 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h3><p><code>$ hexo new &quot;title&quot;</code></p><h3 id="关于界面"><a href="#关于界面" class="headerlink" title="关于界面"></a>关于界面</h3><blockquote><p>maupassant主题里有个关于导航菜单，默认点进去是不行的，需要自己新建个。<br>在Hexo的 source 目录新建个 about 文件夹，文件夹里按模板新建个 index.md</p></blockquote><h3 id="更改主题语言"><a href="#更改主题语言" class="headerlink" title="更改主题语言"></a>更改主题语言</h3><p>支持多种语言 去config文件里面改就可以（我找了半天才找到）其实关于一些设置的东西 大多数都在config里面改</p>]]></content>
    
    <summary type="html">
    
      自己之前搭建过blog，当时是公司的电脑，另外当时也是稀里糊涂搞出来了，后来换了公司把原文件都搞丢了，后来就忘记怎么弄了，这次又重新来了一遍，并做了笔记，记性再好不如写下来 实在。
    
    </summary>
    
      <category term="文章" scheme="http://lbrjms.github.io/categories/%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="Hexo" scheme="http://lbrjms.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lbrjms.github.io/2019/06/05/hello-world/"/>
    <id>http://lbrjms.github.io/2019/06/05/hello-world/</id>
    <published>2019-06-05T01:40:28.316Z</published>
    <updated>2019-06-05T01:40:28.317Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Unity gameobject 的 生命周期</title>
    <link href="http://lbrjms.github.io/2018/08/08/Unity%20gameobject%20%E7%9A%84%20%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://lbrjms.github.io/2018/08/08/Unity gameobject 的 生命周期/</id>
    <published>2018-08-07T16:00:00.000Z</published>
    <updated>2019-06-12T09:03:40.739Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Unity3d-基础学习"><a href="#Unity3d-基础学习" class="headerlink" title="Unity3d 基础学习"></a>Unity3d 基础学习</h3><a id="more"></a><h4 id="脚本生命周期"><a href="#脚本生命周期" class="headerlink" title="脚本生命周期"></a>脚本生命周期</h4><ul><li><p>Awake</p><p>脚本被载入是调用</p></li><li><p>OnEnable</p><p>对象变为可用或激活状态时调用</p></li><li><p>Start</p><p>只调用一次</p></li><li><p>FixedUpdate</p><p>固定的时间间隔被调用 不受设备的帧率等的影响</p></li><li><p>Update</p><p>更新</p></li><li><p>LateUpdate</p><p>Update之后更新</p></li><li><p>OnGUI</p><p>渲染和处理GUI事件</p></li><li><p>OnDisable</p><p>当前对象不可用或处于非激活状态 脚本或对象被销毁的时候调用</p></li><li><p>OnDestroy</p><p>当物体 或是 脚本 被销毁</p></li></ul><h3 id="常用的方法"><a href="#常用的方法" class="headerlink" title="常用的方法"></a>常用的方法</h3><ul><li><p>gameObt.GetComponent&lt; compomentName &gt; ();</p><p>获取到对应的compoment</p></li><li><p>GetComponent<rigidbody> ().AddForce (vec3);</rigidbody></p><p>给刚体添加力</p></li></ul><!--more-->]]></content>
    
    <summary type="html">
    
      Unity3d 基础学习
    
    </summary>
    
    
      <category term="iOS" scheme="http://lbrjms.github.io/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>全局Pop 隐藏TabBar NavigationBar</title>
    <link href="http://lbrjms.github.io/2018/08/08/%E5%85%A8%E5%B1%80Pop%20%E9%9A%90%E8%97%8FTabBar%20NavigationBar/"/>
    <id>http://lbrjms.github.io/2018/08/08/全局Pop 隐藏TabBar NavigationBar/</id>
    <published>2018-08-07T16:00:00.000Z</published>
    <updated>2019-06-12T09:03:21.817Z</updated>
    
    <content type="html"><![CDATA[<h3 id="全局Pop-侧边缘滑动的拓展"><a href="#全局Pop-侧边缘滑动的拓展" class="headerlink" title="全局Pop(侧边缘滑动的拓展)"></a>全局Pop(侧边缘滑动的拓展)</h3><a id="more"></a><h4 id="思路-给系统的侧边缘滑动runtime添加target-action"><a href="#思路-给系统的侧边缘滑动runtime添加target-action" class="headerlink" title="思路:给系统的侧边缘滑动runtime添加target action"></a>思路:给系统的侧边缘滑动runtime添加target action</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomNavigationController</span>: <span class="title">UINavigationController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1. 获取系统的Pop手势</span></span><br><span class="line">    <span class="keyword">let</span> systemGes = interactivePopGestureRecognizer</span><br><span class="line">    <span class="comment">// 2. 获取手势的view用于添加新的手势</span></span><br><span class="line">    <span class="keyword">let</span> gesView = systemGes?.view</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 获取target/action</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.1 利用运行时机制获取所有的属性名称</span></span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">count</span> : <span class="type">UInt32</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">let</span> ivars = class_copyIvarList(<span class="type">UIGestureRecognizer</span>.<span class="keyword">self</span>, &amp;<span class="built_in">count</span>)!</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> ivar = ivars[<span class="type">Int</span>(i)]</span><br><span class="line">        <span class="keyword">let</span> name = ivar_getName(ivar)!</span><br><span class="line">        <span class="built_in">print</span>(<span class="type">String</span>(cString : name))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> targets = systemGes?.value(forKey: <span class="string">"_targets"</span>) <span class="keyword">as</span>? [<span class="type">NSObject</span>]</span><br><span class="line">    <span class="keyword">let</span> targetObjc = targets?.first</span><br><span class="line">    <span class="comment">// 3.2 取出target</span></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> target = targetObjc?.value(forKey: <span class="string">"target"</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">    <span class="comment">// 3.3 取出action</span></span><br><span class="line">    <span class="keyword">let</span> action = <span class="type">Selector</span>((<span class="string">"handleNavigationTransition:"</span>))</span><br><span class="line">    <span class="comment">// 4. 创建自己的Pan手势</span></span><br><span class="line">    <span class="keyword">let</span> panGes = <span class="type">UIPanGestureRecognizer</span>()</span><br><span class="line">    gesView?.addGestureRecognizer(panGes)</span><br><span class="line">    panGes.addTarget(target, action: action)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="隐藏tabBar"><a href="#隐藏tabBar" class="headerlink" title="隐藏tabBar"></a>隐藏tabBar</h4><pre><code>import UIKitclass CustomNavigationController: UINavigationController { override func viewDidLoad() {    super.viewDidLoad() } override func pushViewController(_ viewController: UIViewController, animated: Bool) {     viewController.hidesBottomBarWhenPushed = true     super.pushViewController(viewController, animated: animated) }}</code></pre><h4 id="隐藏NavigationBar"><a href="#隐藏NavigationBar" class="headerlink" title="隐藏NavigationBar"></a>隐藏NavigationBar</h4><pre><code>class ViewController: UIViewController,UIGestureRecognizerDelegate {override func viewWillAppear(_ animated: Bool) {super.viewWillAppear(animated)navigationController?.setNavigationBarHidden(true, animated: true)navigationController?.interactivePopGestureRecognizer?.delegate = selfnavigationController?.interactivePopGestureRecognizer?.isEnabled = true}override func viewWillDisappear(_ animated: Bool) {super.viewWillDisappear(animated)navigationController?.setNavigationBarHidden(false, animated: true)}override func viewDidLoad() {super.viewDidLoad()}}</code></pre>]]></content>
    
    <summary type="html">
    
      全局Pop(侧边缘滑动的拓展)
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>各种地图的坐标转换</title>
    <link href="http://lbrjms.github.io/2017/07/26/%E5%90%84%E7%A7%8D%E5%9C%B0%E5%9B%BE%E7%9A%84%E5%9D%90%E6%A0%87%E8%BD%AC%E6%8D%A2/"/>
    <id>http://lbrjms.github.io/2017/07/26/各种地图的坐标转换/</id>
    <published>2017-07-26T09:06:09.000Z</published>
    <updated>2019-06-12T08:05:21.805Z</updated>
    
    <content type="html"><![CDATA[<p>各种地图的坐标转换</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@interface LWJLocation : NSObject</span><br><span class="line"></span><br><span class="line">@property (nonatomic, assign) double latitude;</span><br><span class="line">@property (nonatomic, assign) double longitude;</span><br><span class="line"></span><br><span class="line">- (id)initWithLatitude:(double)latitude andLongitude:(double)longitude;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> 坐标系：</span><br><span class="line"> WGS-84：是国际标准，GPS坐标（Google Earth使用、或者GPS模块）</span><br><span class="line"> GCJ-02：中国坐标偏移标准，Google Map、高德、腾讯使用</span><br><span class="line"> BD-09 ：百度坐标偏移标准，Baidu Map使用</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">#pragma mark - 从GPS坐标转化到高德坐标</span><br><span class="line">- (id)transformFromGPSToGD;</span><br><span class="line"></span><br><span class="line">#pragma mark - 从高德坐标转化到百度坐标</span><br><span class="line">- (id)transformFromGDToBD;</span><br><span class="line"></span><br><span class="line">#pragma mark - 从百度坐标到高德坐标</span><br><span class="line">- (id)transformFromBDToGD;</span><br><span class="line"></span><br><span class="line">#pragma mark - 从高德坐标到GPS坐标</span><br><span class="line">- (id)transformFromGDToGPS;</span><br><span class="line"></span><br><span class="line">#pragma mark - 从百度坐标到GPS坐标</span><br><span class="line">- (id)transformFromBDToGPS;</span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">#import &lt;CoreLocation/CoreLocation.h&gt;</span><br><span class="line"></span><br><span class="line">static const double a = 6378245.0;</span><br><span class="line">static const double ee = 0.00669342162296594323;</span><br><span class="line">static const double pi = M_PI;</span><br><span class="line">static const double xPi = M_PI  * 3000.0 / 180.0;</span><br><span class="line"></span><br><span class="line">@implementation LWJLocation</span><br><span class="line"></span><br><span class="line">- (id)initWithLatitude:(double)latitude andLongitude:(double)longitude &#123;</span><br><span class="line">    if (self = [super init]) &#123;</span><br><span class="line">        self.latitude = latitude;</span><br><span class="line">        self.longitude = longitude;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)transformFromGPSToGD &#123;</span><br><span class="line">    CLLocationCoordinate2D coor = [LWJLocation transformFromWGSToGCJ:CLLocationCoordinate2DMake(self.latitude, self.longitude)];</span><br><span class="line">    return [[LWJLocation alloc] initWithLatitude:coor.latitude andLongitude:coor.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)transformFromGDToBD &#123;</span><br><span class="line">    CLLocationCoordinate2D coor = [LWJLocation transformFromGCJToBaidu:CLLocationCoordinate2DMake(self.latitude, self.longitude)];</span><br><span class="line">    return [[LWJLocation alloc] initWithLatitude:coor.latitude andLongitude:coor.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)transformFromBDToGD &#123;</span><br><span class="line">    CLLocationCoordinate2D coor = [LWJLocation transformFromBaiduToGCJ:CLLocationCoordinate2DMake(self.latitude, self.longitude)];</span><br><span class="line">    return [[LWJLocation alloc] initWithLatitude:coor.latitude andLongitude:coor.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)transformFromGDToGPS &#123;</span><br><span class="line">    CLLocationCoordinate2D coor = [LWJLocation transformFromGCJToWGS:CLLocationCoordinate2DMake(self.latitude, self.longitude)];</span><br><span class="line">    return [[LWJLocation alloc] initWithLatitude:coor.latitude andLongitude:coor.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (id)transformFromBDToGPS &#123;</span><br><span class="line">    //先把百度转化为高德</span><br><span class="line">    CLLocationCoordinate2D start_coor = [LWJLocation transformFromBaiduToGCJ:CLLocationCoordinate2DMake(self.latitude, self.longitude)];</span><br><span class="line">    CLLocationCoordinate2D end_coor = [LWJLocation transformFromGCJToWGS:CLLocationCoordinate2DMake(start_coor.latitude, start_coor.longitude)];</span><br><span class="line">    return [[LWJLocation alloc] initWithLatitude:end_coor.latitude andLongitude:end_coor.longitude];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (CLLocationCoordinate2D)transformFromWGSToGCJ:(CLLocationCoordinate2D)wgsLoc &#123;</span><br><span class="line">    CLLocationCoordinate2D adjustLoc;</span><br><span class="line">    if([self isLocationOutOfChina:wgsLoc]) &#123;</span><br><span class="line">        adjustLoc = wgsLoc;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        double adjustLat = [self transformLatWithX:wgsLoc.longitude - 105.0 withY:wgsLoc.latitude - 35.0];</span><br><span class="line">        double adjustLon = [self transformLonWithX:wgsLoc.longitude - 105.0 withY:wgsLoc.latitude - 35.0];</span><br><span class="line">        long double radLat = wgsLoc.latitude / 180.0 * pi;</span><br><span class="line">        long double magic = sin(radLat);</span><br><span class="line">        magic = 1 - ee * magic * magic;</span><br><span class="line">        long double sqrtMagic = sqrt(magic);</span><br><span class="line">        adjustLat = (adjustLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);</span><br><span class="line">        adjustLon = (adjustLon * 180.0) / (a / sqrtMagic * cos(radLat) * pi);</span><br><span class="line">        adjustLoc.latitude = wgsLoc.latitude + adjustLat;</span><br><span class="line">        adjustLoc.longitude = wgsLoc.longitude + adjustLon;</span><br><span class="line">    &#125;</span><br><span class="line">    return adjustLoc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (double)transformLatWithX:(double)x withY:(double)y &#123;</span><br><span class="line">    double lat = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * sqrt(fabs(x));</span><br><span class="line"></span><br><span class="line">    lat += (20.0 * sin(6.0 * x * pi) + 20.0 *sin(2.0 * x * pi)) * 2.0 / 3.0;</span><br><span class="line">    lat += (20.0 * sin(y * pi) + 40.0 * sin(y / 3.0 * pi)) * 2.0 / 3.0;</span><br><span class="line">    lat += (160.0 * sin(y / 12.0 * pi) + 320 * sin(y * pi / 30.0)) * 2.0 / 3.0;</span><br><span class="line">    return lat;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (double)transformLonWithX:(double)x withY:(double)y &#123;</span><br><span class="line">    double lon = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * sqrt(fabs(x));</span><br><span class="line">    lon += (20.0 * sin(6.0 * x * pi) + 20.0 * sin(2.0 * x * pi)) * 2.0 / 3.0;</span><br><span class="line">    lon += (20.0 * sin(x * pi) + 40.0 * sin(x / 3.0 * pi)) * 2.0 / 3.0;</span><br><span class="line">    lon += (150.0 * sin(x / 12.0 * pi) + 300.0 * sin(x / 30.0 * pi)) * 2.0 / 3.0;</span><br><span class="line">    return lon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (CLLocationCoordinate2D)transformFromGCJToBaidu:(CLLocationCoordinate2D)p &#123;</span><br><span class="line">    long double z = sqrt(p.longitude * p.longitude + p.latitude * p.latitude) + 0.00002 * sqrt(p.latitude * pi);</span><br><span class="line">    long double theta = atan2(p.latitude, p.longitude) + 0.000003 * cos(p.longitude * pi);</span><br><span class="line">    CLLocationCoordinate2D geoPoint;</span><br><span class="line">    geoPoint.latitude  = (z * sin(theta) + 0.006);</span><br><span class="line">    geoPoint.longitude = (z * cos(theta) + 0.0065);</span><br><span class="line">    return geoPoint;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (CLLocationCoordinate2D)transformFromBaiduToGCJ:(CLLocationCoordinate2D)p &#123;</span><br><span class="line">    double x = p.longitude - 0.0065, y = p.latitude - 0.006;</span><br><span class="line">    double z = sqrt(x * x + y * y) - 0.00002 * sin(y * xPi);</span><br><span class="line">    double theta = atan2(y, x) - 0.000003 * cos(x * xPi);</span><br><span class="line">    CLLocationCoordinate2D geoPoint;</span><br><span class="line">    geoPoint.latitude  = z * sin(theta);</span><br><span class="line">    geoPoint.longitude = z * cos(theta);</span><br><span class="line">    return geoPoint;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (CLLocationCoordinate2D)transformFromGCJToWGS:(CLLocationCoordinate2D)p &#123;</span><br><span class="line">    double threshold = 0.00001;</span><br><span class="line"></span><br><span class="line">    // The boundary</span><br><span class="line">    double minLat = p.latitude - 0.5;</span><br><span class="line">    double maxLat = p.latitude + 0.5;</span><br><span class="line">    double minLng = p.longitude - 0.5;</span><br><span class="line">    double maxLng = p.longitude + 0.5;</span><br><span class="line"></span><br><span class="line">    double delta = 1;</span><br><span class="line">    int maxIteration = 30;</span><br><span class="line">    // Binary search</span><br><span class="line">    while(true) &#123;</span><br><span class="line">        CLLocationCoordinate2D leftBottom  = [[self class] transformFromWGSToGCJ:(CLLocationCoordinate2D)&#123;.latitude = minLat,.longitude = minLng&#125;];</span><br><span class="line">        CLLocationCoordinate2D rightBottom = [[self class] transformFromWGSToGCJ:(CLLocationCoordinate2D)&#123;.latitude = minLat,.longitude = maxLng&#125;];</span><br><span class="line">        CLLocationCoordinate2D leftUp      = [[self class] transformFromWGSToGCJ:(CLLocationCoordinate2D)&#123;.latitude = maxLat,.longitude = minLng&#125;];</span><br><span class="line">        CLLocationCoordinate2D midPoint    = [[self class] transformFromWGSToGCJ:(CLLocationCoordinate2D)&#123;.latitude = ((minLat + maxLat) / 2),.longitude = ((minLng + maxLng) / 2)&#125;];</span><br><span class="line">        delta = fabs(midPoint.latitude - p.latitude) + fabs(midPoint.longitude - p.longitude);</span><br><span class="line"></span><br><span class="line">        if(maxIteration-- &lt;= 0 || delta &lt;= threshold) &#123;</span><br><span class="line">            return (CLLocationCoordinate2D)&#123;.latitude = ((minLat + maxLat) / 2),.longitude = ((minLng + maxLng) / 2)&#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if(isContains(p, leftBottom, midPoint)) &#123;</span><br><span class="line">            maxLat = (minLat + maxLat) / 2;</span><br><span class="line">            maxLng = (minLng + maxLng) / 2;</span><br><span class="line">        &#125; else if(isContains(p, rightBottom, midPoint)) &#123;</span><br><span class="line">            maxLat = (minLat + maxLat) / 2;</span><br><span class="line">            minLng = (minLng + maxLng) / 2;</span><br><span class="line">        &#125; else if(isContains(p, leftUp, midPoint)) &#123;</span><br><span class="line">            minLat = (minLat + maxLat) / 2;</span><br><span class="line">            maxLng = (minLng + maxLng) / 2;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            minLat = (minLat + maxLat) / 2;</span><br><span class="line">            minLng = (minLng + maxLng) / 2;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 判断某个点point是否在p1和p2之间</span><br><span class="line">static bool isContains(CLLocationCoordinate2D point, CLLocationCoordinate2D p1, CLLocationCoordinate2D p2) &#123;</span><br><span class="line">    return (point.latitude &gt;= MIN(p1.latitude, p2.latitude) &amp;&amp; point.latitude &lt;= MAX(p1.latitude, p2.latitude)) &amp;&amp; (point.longitude &gt;= MIN(p1.longitude,p2.longitude) &amp;&amp; point.longitude &lt;= MAX(p1.longitude, p2.longitude));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#pragma mark - 判断是不是在中国</span><br><span class="line">+ (BOOL)isLocationOutOfChina:(CLLocationCoordinate2D)location &#123;</span><br><span class="line">    if (location.longitude &lt; 72.004 || location.longitude &gt; 137.8347 || location.latitude &lt; 0.8293 || location.latitude &gt; 55.8271)</span><br><span class="line">        return YES;</span><br><span class="line">    return NO;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;各种地图的坐标转换&lt;/p&gt;
    
    </summary>
    
    
      <category term="ios" scheme="http://lbrjms.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>Runloop</title>
    <link href="http://lbrjms.github.io/2017/07/26/Runloop/"/>
    <id>http://lbrjms.github.io/2017/07/26/Runloop/</id>
    <published>2017-07-26T08:58:24.000Z</published>
    <updated>2019-06-12T08:14:25.855Z</updated>
    
    <content type="html"><![CDATA[<p>可用runloop控制图片加载 卡顿 等问题</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#import &quot;ViewController.h&quot;</span><br><span class="line">typedef BOOL(^RunloopBlock)(void);</span><br><span class="line">@interface ViewController ()</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 存放任务的数组</span><br><span class="line"> */</span><br><span class="line">@property (nonatomic, retain)NSMutableArray *tasks;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> 最大任务数</span><br><span class="line"> */</span><br><span class="line">@property (nonatomic, assign)NSUInteger max;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ViewController</span><br><span class="line"></span><br><span class="line">- (void)viewDidLoad &#123;</span><br><span class="line">    [super viewDidLoad];</span><br><span class="line">    _max = 18;</span><br><span class="line">    _tasks = [NSMutableArray array];</span><br><span class="line">    [self addRunloopObserver];</span><br><span class="line">    NSTimer *timer = [NSTimer timerWithTimeInterval:1 target:self selector:@selector(timerMothod) userInfo:nil repeats:YES];</span><br><span class="line"></span><br><span class="line">    [[NSRunLoop currentRunLoop] addTimer:timer forMode:NSDefaultRunLoopMode];</span><br><span class="line"></span><br><span class="line">//    dispatch_source_t timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0, &lt;#dispatchQueue#&gt;);</span><br><span class="line">//    dispatch_source_set_timer(timer, DISPATCH_TIME_NOW, &lt;#intervalInSeconds#&gt; * NSEC_PER_SEC, &lt;#leewayInSeconds#&gt; * NSEC_PER_SEC);</span><br><span class="line">//    dispatch_source_set_event_handler(timer, ^&#123;</span><br><span class="line">//        &lt;#code to be executed when timer fires#&gt;</span><br><span class="line">//    &#125;);</span><br><span class="line">//    dispatch_resume(timer);</span><br><span class="line">&#125;</span><br><span class="line">- (void)timerMothod</span><br><span class="line">&#123;</span><br><span class="line">    NSLog(@&quot;timer-----&quot;);</span><br><span class="line">&#125;</span><br><span class="line">-(void)touchesBegan:(NSSet&lt;UITouch *&gt; *)touches withEvent:(UIEvent *)event</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">- (void)addRunloopObserver</span><br><span class="line">&#123;</span><br><span class="line">//    typedef struct &#123;</span><br><span class="line">//        CFIndex    version;</span><br><span class="line">//        void *    info;</span><br><span class="line">//        const void *(*retain)(const void *info);</span><br><span class="line">//        void    (*release)(const void *info);</span><br><span class="line">//        CFStringRef    (*copyDescription)(const void *info);</span><br><span class="line">//    &#125; CFRunLoopObserverContext;</span><br><span class="line">    // 上下文结构体</span><br><span class="line">    CFRunLoopObserverContext context = &#123;</span><br><span class="line">        0,</span><br><span class="line">        (__bridge void *)(self),</span><br><span class="line">        &amp;CFRetain,</span><br><span class="line">        &amp;CFRelease,</span><br><span class="line">        NULL</span><br><span class="line">    &#125;;</span><br><span class="line">    // 1.拿到当前的runloop</span><br><span class="line">    CFRunLoopRef runloop = CFRunLoopGetCurrent();</span><br><span class="line"></span><br><span class="line">    static CFRunLoopObserverRef defaultModeObserver;</span><br><span class="line">    // 创建观察者</span><br><span class="line">    defaultModeObserver = CFRunLoopObserverCreate(NULL, kCFRunLoopAfterWaiting, YES, 0, &amp;callBack, &amp;context);</span><br><span class="line">    // 添加当前观察者</span><br><span class="line">    CFRunLoopAddObserver(runloop, defaultModeObserver, kCFRunLoopDefaultMode);</span><br><span class="line">    // c语言与create就要有release</span><br><span class="line">    CFRelease(defaultModeObserver);</span><br><span class="line">&#125;</span><br><span class="line">static void callBack(CFRunLoopObserverRef observer, CFRunLoopActivity activity, void *info) &#123;</span><br><span class="line">    ViewController *vc = (__bridge ViewController *)(info);</span><br><span class="line">    if (vc.tasks.count==0) return;</span><br><span class="line">    while (vc.tasks.count) &#123;</span><br><span class="line">        RunloopBlock unit = vc.tasks.firstObject;</span><br><span class="line">        [vc.tasks removeObjectAtIndex:0];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可用runloop控制图片加载 卡顿 等问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="Runloop" scheme="http://lbrjms.github.io/tags/Runloop/"/>
    
  </entry>
  
  <entry>
    <title>CoreMLtest</title>
    <link href="http://lbrjms.github.io/2017/07/26/CoreMLtest/"/>
    <id>http://lbrjms.github.io/2017/07/26/CoreMLtest/</id>
    <published>2017-07-26T08:53:25.000Z</published>
    <updated>2019-06-12T08:13:26.514Z</updated>
    
    <content type="html"><![CDATA[<p>iOS 11 机器学习练习</p><a id="more"></a><h2 id="iOS-11-机器学习练习"><a href="#iOS-11-机器学习练习" class="headerlink" title="iOS 11 机器学习练习"></a>iOS 11 机器学习练习</h2><!----><!----><h3 id="图片数据"><a href="#图片数据" class="headerlink" title="图片数据"></a>图片数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let imageData = pickImageView.image?.cgImage</span><br></pre></td></tr></table></figure><h3 id="用到的模型"><a href="#用到的模型" class="headerlink" title="用到的模型"></a>用到的模型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let model = try! VNCoreMLModel(for: Resnet50().model)</span><br></pre></td></tr></table></figure><h3 id="配置请求"><a href="#配置请求" class="headerlink" title="配置请求"></a>配置请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let hander = VNImageRequestHandler(cgImage: imageData!)</span><br><span class="line">let request = VNCoreMLRequest(model: model, completionHandler: myResultsMethod)</span><br></pre></td></tr></table></figure><h3 id="执行请求"><a href="#执行请求" class="headerlink" title="执行请求"></a>执行请求</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try! hander.perform([request])</span><br></pre></td></tr></table></figure><h3 id="请求的方法-用于model的输入输出"><a href="#请求的方法-用于model的输入输出" class="headerlink" title="请求的方法 用于model的输入输出"></a>请求的方法 用于model的输入输出</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">func myResultsMethod(request: VNRequest, <span class="attr">error</span>: <span class="built_in">Error</span>?) &#123;</span><br><span class="line">guard <span class="keyword">let</span> results = request.results <span class="keyword">as</span>? [VNClassificationObservation]</span><br><span class="line"><span class="keyword">else</span> &#123; fatalError(<span class="string">"huh"</span>) &#125;</span><br><span class="line">lable.text = results[<span class="number">0</span>].identifier</span><br><span class="line"><span class="keyword">for</span> classification <span class="keyword">in</span> results &#123;</span><br><span class="line">print(<span class="string">"=====++==="</span> + classification.identifier + <span class="string">"----++----"</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">platform :ios, &quot;8.0&quot;</span><br><span class="line">inhibit_all_warnings!</span><br><span class="line"></span><br><span class="line">use_frameworks!</span><br><span class="line">target &apos;RAC_ObjcTest&apos; do</span><br><span class="line"></span><br><span class="line">pod &apos;ReactiveObjC&apos;</span><br><span class="line">pod &apos;XRCarouselView&apos;</span><br><span class="line"></span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;iOS 11 机器学习练习&lt;/p&gt;
    
    </summary>
    
    
      <category term="机器学习" scheme="http://lbrjms.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>AR_Swift</title>
    <link href="http://lbrjms.github.io/2017/07/26/AR-Swift/"/>
    <id>http://lbrjms.github.io/2017/07/26/AR-Swift/</id>
    <published>2017-07-26T08:48:36.000Z</published>
    <updated>2019-06-12T09:05:09.857Z</updated>
    
    <content type="html"><![CDATA[<p>ios 11 出了 ar 体验一把</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import UIKit</span><br><span class="line">import SceneKit</span><br><span class="line">import ARKit</span><br><span class="line"></span><br><span class="line">class ViewController: UIViewController, ARSCNViewDelegate &#123;</span><br><span class="line"></span><br><span class="line">    @IBOutlet var sceneView: ARSCNView!</span><br><span class="line"></span><br><span class="line">    override func viewDidLoad() &#123;</span><br><span class="line">        super.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        // Set the view&apos;s delegate</span><br><span class="line">        sceneView.delegate = self</span><br><span class="line"></span><br><span class="line">        // Show statistics such as fps and timing information</span><br><span class="line">        sceneView.showsStatistics = true</span><br><span class="line"></span><br><span class="line">        // Create a new scene</span><br><span class="line">        let scene = SCNScene(named: &quot;art.scnassets/ship.scn&quot;)!</span><br><span class="line"></span><br><span class="line">        // Set the scene to the view</span><br><span class="line">        sceneView.scene = scene</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    override func viewWillAppear(_ animated: Bool) &#123;</span><br><span class="line">        super.viewWillAppear(animated)</span><br><span class="line"></span><br><span class="line">        // Create a session configuration</span><br><span class="line">        let configuration = ARWorldTrackingSessionConfiguration()</span><br><span class="line"></span><br><span class="line">        // Run the view&apos;s session</span><br><span class="line">        sceneView.session.run(configuration)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    override func viewWillDisappear(_ animated: Bool) &#123;</span><br><span class="line">        super.viewWillDisappear(animated)</span><br><span class="line"></span><br><span class="line">        // Pause the view&apos;s session</span><br><span class="line">        sceneView.session.pause()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    override func didReceiveMemoryWarning() &#123;</span><br><span class="line">        super.didReceiveMemoryWarning()</span><br><span class="line">        // Release any cached data, images, etc that aren&apos;t in use.</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // MARK: - ARSCNViewDelegate</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">    // Override to create and configure nodes for anchors added to the view&apos;s session.</span><br><span class="line">    func renderer(_ renderer: SCNSceneRenderer, nodeFor anchor: ARAnchor) -&gt; SCNNode? &#123;</span><br><span class="line">        let node = SCNNode()</span><br><span class="line"></span><br><span class="line">        return node</span><br><span class="line">    &#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">    func session(_ session: ARSession, didFailWithError error: Error) &#123;</span><br><span class="line">        // Present an error message to the user</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    func sessionWasInterrupted(_ session: ARSession) &#123;</span><br><span class="line">        // Inform the user that the session has been interrupted, for example, by presenting an overlay</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    func sessionInterruptionEnded(_ session: ARSession) &#123;</span><br><span class="line">        // Reset tracking and/or remove existing anchors if consistent tracking is required</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ios 11 出了 ar 体验一把
    
    </summary>
    
      <category term="iOS" scheme="http://lbrjms.github.io/categories/iOS/"/>
    
    
      <category term="AR" scheme="http://lbrjms.github.io/tags/AR/"/>
    
  </entry>
  
  <entry>
    <title>一些有用的终端命令</title>
    <link href="http://lbrjms.github.io/2017/07/25/%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/"/>
    <id>http://lbrjms.github.io/2017/07/25/一些有用的终端命令/</id>
    <published>2017-07-25T00:23:42.000Z</published>
    <updated>2019-06-12T08:05:21.804Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android_布局</title>
    <link href="http://lbrjms.github.io/2017/07/24/Android-%E5%B8%83%E5%B1%80/"/>
    <id>http://lbrjms.github.io/2017/07/24/Android-布局/</id>
    <published>2017-07-24T14:19:15.000Z</published>
    <updated>2019-06-12T08:10:02.997Z</updated>
    
    <content type="html"><![CDATA[<p>LinearLayout RectiveLayout TablbeLayout</p><a id="more"></a><ul><li><p>LinearLayout</p><p>layout_margin 外边距(控件距离其他空间或是屏幕边缘的距离)</p><p>padding 内边距 (控件内部内容距离控件边缘的距离)</p><p>gravity 表示控件内部内容的对齐方式</p><p>layout_gravity 该控件在父类布局中的对齐方式</p><p>如果线性布局的对齐方式为水平layout_gravity 在水平方向上不起作用</p><p>如果线性布局的对齐方式为垂直layout_gravity 在垂直方向上不起作用</p><p>layout_weight  权重(百分比) 线性布局的特有属性<br>如果控件划分的match_parent 成反比<br>如果控件划分的wrap_content 成正比</p><p>无权重控件优先级高 然后按剩余页面的控件大小按照权重划分</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LinearLayout RectiveLayout TablbeLayout&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://lbrjms.github.io/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Android_无线调试脚本</title>
    <link href="http://lbrjms.github.io/2017/07/24/Android-%E6%97%A0%E7%BA%BF%E8%B0%83%E8%AF%95%E8%84%9A%E6%9C%AC/"/>
    <id>http://lbrjms.github.io/2017/07/24/Android-无线调试脚本/</id>
    <published>2017-07-24T09:39:25.000Z</published>
    <updated>2019-06-12T08:10:26.490Z</updated>
    
    <content type="html"><![CDATA[<p>执行以下脚本 可用于Android真机无线调试</p><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>Modify this with your IP range</span><br><span class="line">MY_IP_RANGE="192\.168\.1"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>You usually wouldn't have to modify this</span><br><span class="line">PORT_BASE=5555</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>List the devices on the screen for your viewing pleasure</span><br><span class="line">adb devices</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>Find USB devices only (no emulators, genymotion or connected devices</span><br><span class="line">declare -a deviceArray=(`adb devices -l | grep -v emulator | grep -v vbox | grep -v "$&#123;MY_IP_RANGE&#125;" | grep " device " | awk '&#123;print $1&#125;'`)</span><br><span class="line"></span><br><span class="line">echo "found $&#123;#deviceArray[@]&#125; device(s)"</span><br><span class="line">echo</span><br><span class="line"></span><br><span class="line">for index in $&#123;!deviceArray[*]&#125;</span><br><span class="line">do</span><br><span class="line">echo "finding IP address for device $&#123;deviceArray[index]&#125;"</span><br><span class="line">IP_ADDRESS=$(adb -s $&#123;deviceArray[index]&#125; shell ifconfig wlan0 | awk '&#123;print $3&#125;')</span><br><span class="line"></span><br><span class="line">echo "IP address found : $IP_ADDRESS "</span><br><span class="line"></span><br><span class="line">echo "Connecting..."</span><br><span class="line">adb -s $&#123;deviceArray[index]&#125; tcpip $(($PORT_BASE + $index))</span><br><span class="line">adb -s $&#123;deviceArray[index]&#125; connect "$IP_ADDRESS:$(($PORT_BASE + $index))"</span><br><span class="line"></span><br><span class="line">echo</span><br><span class="line">echo</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">adb devices -l</span><br><span class="line"><span class="meta">#</span>exit</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;执行以下脚本 可用于Android真机无线调试&lt;/p&gt;
    
    </summary>
    
      <category term="shell,Android" scheme="http://lbrjms.github.io/categories/shell-Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Gradle常用命令</title>
    <link href="http://lbrjms.github.io/2017/07/24/Gradle%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://lbrjms.github.io/2017/07/24/Gradle常用命令/</id>
    <published>2017-07-24T07:48:34.000Z</published>
    <updated>2019-06-12T09:04:25.889Z</updated>
    
    <content type="html"><![CDATA[<p>./代表当前目录，gradlew代表 gradle wrapper，意思是gradle的一层包装，大家可以理解为在这个项目本地就封装了gradle，即gradle wrapper， 在./gradle/wrapper/gralde-wrapper.properties文件中声明了它指向的目录和版本。只要下载成功即可用grdlew wrapper的命令代替全局的gradle命令。<br>以下的命令都是在项目目录下操作</p><a id="more"></a><ul><li>查看版本号:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew -v</span><br><span class="line">第一次执行这条命令会下载安装</span><br></pre></td></tr></table></figure><ul><li>清除项目目录下的build文件夹</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew clean</span><br></pre></td></tr></table></figure><ul><li>检查依赖编译打包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew build</span><br><span class="line"></span><br><span class="line">这个命令把debug、release环境的包都打出来</span><br></pre></td></tr></table></figure><ul><li>打Debug包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew assembleDebug</span><br></pre></td></tr></table></figure><ul><li>打Release包</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./gradlew assembleRelease</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      gradlew
    
    </summary>
    
    
      <category term="Android" scheme="http://lbrjms.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
